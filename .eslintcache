[{"C:\\Projects\\employee-register-client\\src\\reportWebVitals.js":"1","C:\\Projects\\employee-register-client\\src\\App.js":"2","C:\\Projects\\employee-register-client\\src\\components\\EmployeeList.js":"3","C:\\Projects\\employee-register-client\\src\\components\\Employee.js":"4","C:\\Projects\\employee-register-client\\src\\index.js":"5"},{"size":362,"mtime":1606746674452,"results":"6","hashOfConfig":"7"},{"size":237,"mtime":1606747513442,"results":"8","hashOfConfig":"7"},{"size":3105,"mtime":1607149942372,"results":"9","hashOfConfig":"7"},{"size":3776,"mtime":1607149712952,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1606746674452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1douq8m",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\employee-register-client\\src\\reportWebVitals.js",[],"C:\\Projects\\employee-register-client\\src\\App.js",[],"C:\\Projects\\employee-register-client\\src\\components\\EmployeeList.js",["23","24","25","26"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Employee from \"./Employee\";\r\nimport axios from \"axios\";\r\n\r\nexport default function EmployeeList() {\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    refreshEmployeeList();\r\n  }, []);\r\n\r\n  const employeeAPI = (url = \"https://localhost:44346/api/Employee\") => {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newrecord) => axios.post(url, newrecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    };\r\n  };\r\n\r\n  function refreshEmployeeList() {\r\n    employeeAPI()\r\n      .fetchAll()\r\n      .then((res) => setEmployeeList(res.data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //รับ image data from Employee.js\r\n  const addOrEdit = (formData, onSuccess) => {\r\n    if (formData.get(\"employeeId\") == \"0\")\r\n      employeeAPI()\r\n        .create(formData)\r\n        .then((res) => {\r\n          onSuccess();\r\n          refreshEmployeeList();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    else\r\n      employeeAPI()\r\n        .update(formData.get(\"employeeId\"), formData)\r\n        .then((res) => {\r\n          onSuccess();\r\n          refreshEmployeeList();\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const showRecordDetails = (data) => {\r\n    setRecordForEdit(data);\r\n  };\r\n\r\n  const imageCard = (data) => (\r\n    <div\r\n      className=\"card\"\r\n      onClick={() => {\r\n        showRecordDetails(data);\r\n      }}\r\n    >\r\n      <img src={data.imageSrc} className=\"card-img-top rounded-circle\"></img>\r\n      <div className=\"card-body\">\r\n        <h5>{data.employeeName}</h5>\r\n        <span>{data.occupation}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"jumbotron jumbotron-fluid py-4\">\r\n          <div className=\"container text-center\">\r\n            <h1 className=\"display-4\">Employee Register</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <Employee\r\n          addOrEdit={addOrEdit}\r\n          recordForEdit={recordForEdit}\r\n        ></Employee>\r\n      </div>\r\n      <div className=\"col-md-8\">\r\n        <table>\r\n          <tbody>\r\n            {\r\n              //tr > 3 td\r\n              [...Array(Math.ceil(employeeList.length / 3))].map((e, i) => (\r\n                <tr key={i}>\r\n                  <td>{imageCard(employeeList[3 * i])}</td>\r\n                  <td>\r\n                    {employeeList[3 * i + 1]\r\n                      ? imageCard(employeeList[3 * i + 1])\r\n                      : null}\r\n                  </td>\r\n                  <td>\r\n                    {employeeList[3 * i + 2]\r\n                      ? imageCard(employeeList[3 * i + 2])\r\n                      : null}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\employee-register-client\\src\\components\\Employee.js",["27","28","29","30","31"],"C:\\Projects\\employee-register-client\\src\\index.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":12,"column":6,"nodeType":"38","endLine":12,"endColumn":8,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":32,"column":36,"nodeType":"42","messageId":"43","endLine":32,"endColumn":38},{"ruleId":"44","severity":1,"message":"45","line":61,"column":7,"nodeType":"46","endLine":61,"endColumn":72},{"ruleId":"40","severity":1,"message":"41","line":47,"column":45,"nodeType":"42","messageId":"43","endLine":47,"endColumn":47},{"ruleId":"40","severity":1,"message":"41","line":48,"column":37,"nodeType":"42","messageId":"43","endLine":48,"endColumn":39},{"ruleId":"40","severity":1,"message":"41","line":50,"column":47,"nodeType":"42","messageId":"43","endLine":50,"endColumn":49},{"ruleId":"40","severity":1,"message":"41","line":74,"column":70,"nodeType":"42","messageId":"43","endLine":74,"endColumn":72},{"ruleId":"44","severity":1,"message":"45","line":84,"column":11,"nodeType":"46","endLine":84,"endColumn":63},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshEmployeeList'. Either include it or remove the dependency array.","ArrayExpression",["47"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"48","fix":"49"},"Update the dependencies array to be: [refreshEmployeeList]",{"range":"50","text":"51"},[363,365],"[refreshEmployeeList]"]